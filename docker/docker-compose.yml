version: "3.5"

services:
  db:
    container_name: db-server
    networks:
      - app-network
    build:
      context: ./build/db
      dockerfile: Dockerfile
    ports:
      - 1433:1433
    volumes:
      - ../database:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_SA_PASSWORD}
    command: sh -c "./initialize.sh -d ${SQL_DB_NAME} -p ${SQL_SA_PASSWORD} &  /opt/mssql/bin/sqlservr" 

  api:
    container_name: api-server
    networks:
      - app-network
    build: 
      context: ./build/api
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__SqlConnection=server=${SQL_SERVER_NAME}; database=${SQL_DB_NAME};user id='sa';password='${SQL_SA_PASSWORD}'; Integrated Security=false; Encrypt=True;TrustServerCertificate=True
      - DOTNET_USE_POLLING_FILE_WATCHER 1
    volumes:
      - ../src/${API_NAME}:/app      
    ports:
      - 5000:5000
    links:
      - db
    depends_on:
      - db        
    
  app:
    container_name: app-server
    networks:  
      - app-network
    build: 
      context: ./build/app
      dockerfile: Dockerfile
      args:
        APP_NAME: ${APP_NAME}
    volumes:
      - ../src/${APP_NAME}:/app/${APP_NAME}
    environment:
      - WATCHPACK_POLLING=true
      - APP_NAME=${APP_NAME}
    ports:
      - 3000:3000
    depends_on:
      - db
      - api
    links:
      - api
      - db
    extra_hosts:
      - "myapp:127.0.0.1"
    command: sh -c "npm install &&  npm run dev"

networks:
  app-network:
    driver: bridge 
